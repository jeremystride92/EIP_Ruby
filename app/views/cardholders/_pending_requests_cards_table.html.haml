%form#pending_requests_cards_form.form-search.form-inline.clearfix{action: pending_requests_cards_venue_cardholders_path, method: :get}
  .input-append.pull-right
    %input#filter.search-query{ type: :text, name: :filter, value: @filter_string, placeholder: 'Last Name or Phone #' }
    = button_tag class: 'btn' do
      -if @filter_string.nil?
        %i.icon-search
      -else
        %i.icon-remove
  %input{type: 'hidden',name: 'active_tab',value: @active}
%table.table.table-striped.pending-cards
  %thead
    %th Phone Number
    %th Name
    %th Source
    %th Actions
  %tbody
    - @pending_cards.each do |card|
      %tr.pending-card
        %th= card.cardholder.phone_number
        %td
          %span.first_name= card.cardholder.first_name
          %span.last_name= card.cardholder.last_name
        %td
          %span.source
            = card.source_type.try(:titleize)
            - if card.source_name.present?
              %i (#{card.source_name})
        %td.actions
          = simple_form_for card, url: venue_card_review_request_path(card), method: :put, html: { class: 'inline-form approve-card', id: "approve_card_#{card.id}" }, remote: true do |f|
            .row-fluid
              - card.card_level_id = nil
              = f.input :card_level_id, collection: @venue.card_levels, label: false, prompt: 'Choose a Card Level', required: true, wrapper_html: { class: 'span8' }, input_html: { required: true, class: 'span12', id: "card_#{card.id}_card_level_id" }
              .inline-form-actions.span4
                = button_tag type: :submit, name: 'approve', class: 'btn-success btn' do
                  %i.icon-ok
                  Issue
                = button_tag type: :submit, name: 'reject', formnovalidate: true, class: 'btn-danger btn' do
                  %i.icon-remove
                  Reject
